[{"/Users/stan/Desktop/messenger/client/src/index.tsx":"1","/Users/stan/Desktop/messenger/client/src/contexts/UserProvider.tsx":"2","/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/MessagesList.tsx":"3","/Users/stan/Desktop/messenger/client/src/components/chat/chatInput/ChatInput.tsx":"4","/Users/stan/Desktop/messenger/client/src/ChatApp.tsx":"5","/Users/stan/Desktop/messenger/client/src/App.tsx":"6","/Users/stan/Desktop/messenger/client/src/components/profilePicture/ProfilePicture.tsx":"7","/Users/stan/Desktop/messenger/client/src/components/chat/chatHeader/ChatHeader.tsx":"8","/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/chatMessage/ChatMessage.tsx":"9","/Users/stan/Desktop/messenger/client/src/components/sideBarChatsList/sideBarHeader/SideBarHeader.tsx":"10","/Users/stan/Desktop/messenger/client/src/components/sideBarChatsList/sideBarHeader/sideBarSearchInput/SideBarSearchInput.tsx":"11","/Users/stan/Desktop/messenger/client/src/components/sideBarChatsList/sideBarItem/SideBarChatItem.tsx":"12","/Users/stan/Desktop/messenger/client/src/components/sideBarChatsList/ChatSideBar.tsx":"13","/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/chatMessage/scrollIntoView.tsx":"14","/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/chatMessage/chatTime/ChatDate.tsx":"15","/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/chatMessage/chatMessageDateFormat.tsx":"16","/Users/stan/Desktop/messenger/client/src/contexts/ChatsProvider.tsx":"17","/Users/stan/Desktop/messenger/client/src/components/sideBarChatsList/sideBarHeader/chatSideBarSearchResults/ChatSideBarSearchResults.tsx":"18","/Users/stan/Desktop/messenger/client/src/components/chat/chatInput/sendMessage.tsx":"19","/Users/stan/Desktop/messenger/client/src/sortedChats.tsx":"20","/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/chatMessage/groupeChatMessage.tsx":"21","/Users/stan/Desktop/messenger/client/src/skeletons/chatMessagesSkeleton/ChatMessagesSkeleton.tsx":"22","/Users/stan/Desktop/messenger/client/src/skeletons/chatHeaderSkeleton/ChatHeaderSkeleton.tsx":"23"},{"size":197,"mtime":1645697951908,"results":"24","hashOfConfig":"25"},{"size":292,"mtime":1645836526162,"results":"26","hashOfConfig":"25"},{"size":2211,"mtime":1646054431631,"results":"27","hashOfConfig":"25"},{"size":1522,"mtime":1645955866628,"results":"28","hashOfConfig":"25"},{"size":4024,"mtime":1646072865529,"results":"29","hashOfConfig":"25"},{"size":359,"mtime":1645805187363,"results":"30","hashOfConfig":"25"},{"size":1083,"mtime":1645968041410,"results":"31","hashOfConfig":"25"},{"size":1057,"mtime":1646059593897,"results":"32","hashOfConfig":"25"},{"size":2692,"mtime":1646061237899,"results":"33","hashOfConfig":"25"},{"size":1352,"mtime":1645968022480,"results":"34","hashOfConfig":"25"},{"size":554,"mtime":1645876644758,"results":"35","hashOfConfig":"25"},{"size":2024,"mtime":1645954286155,"results":"36","hashOfConfig":"25"},{"size":615,"mtime":1645876364829,"results":"37","hashOfConfig":"25"},{"size":327,"mtime":1645957079555,"results":"38","hashOfConfig":"25"},{"size":781,"mtime":1646050536217,"results":"39","hashOfConfig":"25"},{"size":860,"mtime":1645873922186,"results":"40","hashOfConfig":"25"},{"size":298,"mtime":1645876166884,"results":"41","hashOfConfig":"25"},{"size":222,"mtime":1645879791884,"results":"42","hashOfConfig":"25"},{"size":1196,"mtime":1645900593707,"results":"43","hashOfConfig":"25"},{"size":897,"mtime":1645908985248,"results":"44","hashOfConfig":"25"},{"size":3615,"mtime":1646061275251,"results":"45","hashOfConfig":"25"},{"size":1279,"mtime":1646060585744,"results":"46","hashOfConfig":"25"},{"size":324,"mtime":1646059555951,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1t21to1",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"63"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"/Users/stan/Desktop/messenger/client/src/index.tsx",[],[],["126","127"],"/Users/stan/Desktop/messenger/client/src/contexts/UserProvider.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/MessagesList.tsx",["128","129"],[],"import axios from \"axios\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ChatMessagesSkeleton from \"../../../skeletons/chatMessagesSkeleton/ChatMessagesSkeleton\";\nimport { Message } from \"../../../types\";\nimport ChatMessage from \"./chatMessage/ChatMessage\";\nimport \"./messagesList.css\";\n\nconst MessagesList = ({\n  messages,\n  setMessages,\n}: {\n  messages: Message[];\n  setMessages: React.Dispatch<React.SetStateAction<Message[]>>;\n}) => {\n  const currentChatParamsId = useParams().chatId;\n  const chatMessagesWrapperRef = useRef<HTMLDivElement>(null);\n  const [loading, setLoading] = useState(true);\n\n  const sortMessages = (messages: Message[]) => {\n    setMessages(\n      messages.sort((m1: Message, m2: Message) => {\n        return (\n          new Date(m2.createdAt).valueOf() - new Date(m1.createdAt).valueOf()\n        );\n      })\n    );\n  };\n\n  const fetchMessagesWhenReachingTop = () => {\n    const chatMessageRefCurrent = chatMessagesWrapperRef.current;\n    if (!chatMessageRefCurrent) return;\n    const scrollableHeight =\n      chatMessageRefCurrent.scrollHeight -\n      chatMessageRefCurrent.getBoundingClientRect().height;\n    const hasReachedTop = () => {\n      if (scrollableHeight + chatMessageRefCurrent.scrollTop > 0) return false;\n      else return true;\n    };\n    // console.log(hasReachedTop());\n  };\n\n  useEffect(() => {\n    if (!currentChatParamsId) return;\n    setLoading(true);\n    const getMessages = async () => {\n      const res = await axios.get(\n        `http://localhost:5050/api/messages/${currentChatParamsId}`\n      );\n      sortMessages(res.data);\n      setLoading(false);\n    };\n    getMessages();\n  }, [currentChatParamsId]);\n\n  return (\n    <div className=\"chat-messages-list-container\">\n      <div\n        onScroll={fetchMessagesWhenReachingTop}\n        ref={chatMessagesWrapperRef}\n        className=\"chat-messages-list-wrapper\"\n      >\n        {loading ? (\n          <ChatMessagesSkeleton />\n        ) : (\n          messages.map((message, i) => (\n            <ChatMessage key={message._id} messages={messages} i={i} />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MessagesList;\n",["130","131"],"/Users/stan/Desktop/messenger/client/src/components/chat/chatInput/ChatInput.tsx",[],[],["132","133"],"/Users/stan/Desktop/messenger/client/src/ChatApp.tsx",["134"],[],"/Users/stan/Desktop/messenger/client/src/App.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/components/profilePicture/ProfilePicture.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/components/chat/chatHeader/ChatHeader.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/chatMessage/ChatMessage.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/components/sideBarChatsList/sideBarHeader/SideBarHeader.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/components/sideBarChatsList/sideBarHeader/sideBarSearchInput/SideBarSearchInput.tsx",["135"],[],"import React, { useState } from \"react\";\nimport \"./sideBarSearchInput.css\";\n\nconst SideBarSearchInput = ({\n  searchInput,\n  setSearchInput,\n}: {\n  searchInput: string;\n  setSearchInput: React.Dispatch<React.SetStateAction<string>>;\n}) => {\n  return (\n    <div className=\"side-bar-search-input-wrapper\">\n      <input\n        placeholder=\"Search a conversation...\"\n        className=\"side-bar-search-input\"\n        value={searchInput}\n        onChange={(e) => setSearchInput(e.target.value)}\n      />\n    </div>\n  );\n};\n\nexport default SideBarSearchInput;\n",["136","137"],"/Users/stan/Desktop/messenger/client/src/components/sideBarChatsList/sideBarItem/SideBarChatItem.tsx",["138"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Chat } from \"../../../types\";\nimport ProfilePicture from \"../../profilePicture/ProfilePicture\";\nimport \"./sideBarChatItem.css\";\nimport { format } from \"timeago.js\";\nimport { MoreVert } from \"@mui/icons-material\";\n\nconst SideBarConversationItem = ({ chat }: { chat: Chat }) => {\n  const currentChatParamsId = useParams().chatId;\n  const [isCurrentChat, setIsCurrentChat] = useState(\n    chat._id === currentChatParamsId\n  );\n  useEffect(() => {\n    setIsCurrentChat(chat._id === currentChatParamsId);\n  }, [currentChatParamsId]);\n\n  const handleOptionsClick = (e: any) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Link className=\"Link\" to={\"/\" + chat._id} style={{ position: \"relative\" }}>\n      <div\n        className={\n          isCurrentChat ? \"side-bar-chat-item current\" : \"side-bar-chat-item\"\n        }\n      >\n        <ProfilePicture\n          key={chat._id}\n          members={chat.membersInfos}\n          size=\"large\"\n        />\n        <div className=\"side-bar-chat-item-infos\">\n          <h1 className=\"side-bar-members-usernames\">\n            {chat.membersInfos.map((member) => {\n              return member.username;\n            })}\n          </h1>\n\n          {chat.lastMessage && (\n            <p className=\"side-bar-chat-item-last-message\">\n              {chat.lastMessage.content.length > 20\n                ? chat.lastMessage.content.slice(0, 30) + \"...\"\n                : chat.lastMessage.content}\n              <span className=\"side-bar-chat-last-message-date\">\n                {\" \"}\n                • {format(chat.lastMessage.createdAt)}\n              </span>\n            </p>\n          )}\n        </div>\n        <div\n          onClick={handleOptionsClick}\n          className=\"chat-side-bar-otpions-button\"\n        >\n          <MoreVert />\n        </div>\n      </div>\n      <div className=\"side-bar-chat-item-divider \" />\n    </Link>\n  );\n};\n\nexport default SideBarConversationItem;\n","/Users/stan/Desktop/messenger/client/src/components/sideBarChatsList/ChatSideBar.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/chatMessage/scrollIntoView.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/chatMessage/chatTime/ChatDate.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/chatMessage/chatMessageDateFormat.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/contexts/ChatsProvider.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/components/sideBarChatsList/sideBarHeader/chatSideBarSearchResults/ChatSideBarSearchResults.tsx",["139"],[],"/Users/stan/Desktop/messenger/client/src/components/chat/chatInput/sendMessage.tsx",["140","141"],[],"import axios from \"axios\";\nimport { Chat, User } from \"../../../types\";\n\nexport const sendMessage = async ({\n  messageInput,\n  setMessageInput,\n  chats,\n  user,\n  currentChatId,\n}: {\n  messageInput: string;\n  setMessageInput: React.Dispatch<React.SetStateAction<string>>;\n  chats: Chat[];\n  user: User | null;\n  currentChatId: string | undefined;\n}) => {\n  if (messageInput === \"\" || !user || !currentChatId) return;\n  const res = await axios.post(\n    `http://localhost:5050/api/messages/${currentChatId}`,\n    {\n      content: messageInput,\n      userId: user._id,\n      chatId: currentChatId,\n    }\n  );\n  const chatsCopy = [...chats];\n  const currentChat = chatsCopy.find((chat) => chat._id === currentChatId);\n  if (!currentChat) return;\n  const membersIds = currentChat.membersInfos.map((member) => member._id);\n  const receiversIds = membersIds.filter((id) => id !== user._id);\n  const { userId, ...others } = res.data;\n  const messageCopy = {\n    ...others,\n    userInfos: user,\n  };\n  //   emitNewMessageSocket(messageCopy, receiversIds);\n  //   updateCurrentChatLastMessage(messageCopy, currentChat, chatsCopy);\n  //   setMessages([messageCopy, ...messages]);\n  setMessageInput(\"\");\n};\n",["142","143"],"/Users/stan/Desktop/messenger/client/src/sortedChats.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/chatMessage/groupeChatMessage.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/skeletons/chatMessagesSkeleton/ChatMessagesSkeleton.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/skeletons/chatHeaderSkeleton/ChatHeaderSkeleton.tsx",[],[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":36,"column":11,"nodeType":"150","messageId":"151","endLine":36,"endColumn":24},{"ruleId":"152","severity":1,"message":"153","line":54,"column":6,"nodeType":"154","endLine":54,"endColumn":27,"suggestions":"155"},{"ruleId":"144","replacedBy":"156"},{"ruleId":"146","replacedBy":"157"},{"ruleId":"144","replacedBy":"158"},{"ruleId":"146","replacedBy":"159"},{"ruleId":"152","severity":1,"message":"160","line":50,"column":6,"nodeType":"154","endLine":50,"endColumn":21,"suggestions":"161"},{"ruleId":"148","severity":1,"message":"162","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"144","replacedBy":"163"},{"ruleId":"146","replacedBy":"164"},{"ruleId":"152","severity":1,"message":"165","line":16,"column":6,"nodeType":"154","endLine":16,"endColumn":27,"suggestions":"166"},{"ruleId":"148","severity":1,"message":"167","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":27},{"ruleId":"148","severity":1,"message":"168","line":30,"column":9,"nodeType":"150","messageId":"151","endLine":30,"endColumn":21},{"ruleId":"148","severity":1,"message":"169","line":32,"column":9,"nodeType":"150","messageId":"151","endLine":32,"endColumn":20},{"ruleId":"144","replacedBy":"170"},{"ruleId":"146","replacedBy":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"@typescript-eslint/no-unused-vars","'hasReachedTop' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sortMessages'. Either include it or remove the dependency array.","ArrayExpression",["174"],["172"],["173"],["172"],["173"],"React Hook useEffect has a missing dependency: 'currentChatParamsId'. Either include it or remove the dependency array.",["175"],"'useState' is defined but never used.",["172"],["173"],"React Hook useEffect has a missing dependency: 'chat._id'. Either include it or remove the dependency array. If 'setIsCurrentChat' needs the current value of 'chat._id', you can also switch to useReducer instead of useState and read 'chat._id' in the reducer.",["176"],"'useContext' is defined but never used.","'receiversIds' is assigned a value but never used.","'messageCopy' is assigned a value but never used.",["172"],["173"],"no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [currentChatParamsId, sortMessages]",{"range":"183","text":"184"},"Update the dependencies array to be: [socket, chats, currentChatParamsId]",{"range":"185","text":"186"},"Update the dependencies array to be: [chat._id, currentChatParamsId]",{"range":"187","text":"188"},[1704,1725],"[currentChatParamsId, sortMessages]",[1730,1745],"[socket, chats, currentChatParamsId]",[618,639],"[chat._id, currentChatParamsId]"]