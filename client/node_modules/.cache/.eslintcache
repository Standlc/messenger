[{"/Users/stan/Desktop/messenger/client/src/index.tsx":"1","/Users/stan/Desktop/messenger/client/src/contexts/UserProvider.tsx":"2","/Users/stan/Desktop/messenger/client/src/components/sideBarConversationsList/SideBarConversationsList.tsx":"3","/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/MessagesList.tsx":"4","/Users/stan/Desktop/messenger/client/src/components/chat/chatInput/ChatInput.tsx":"5","/Users/stan/Desktop/messenger/client/src/ChatApp.tsx":"6","/Users/stan/Desktop/messenger/client/src/App.tsx":"7","/Users/stan/Desktop/messenger/client/src/components/sideBarConversationsList/sideBarItem/SideBarConversationItem.tsx":"8","/Users/stan/Desktop/messenger/client/src/components/sideBarConversationsList/sideBarHeader/SideBarHeader.tsx":"9","/Users/stan/Desktop/messenger/client/src/components/sideBarConversationsList/sideBarHeader/sideBarSearchInput/SideBarSearchInput.tsx":"10","/Users/stan/Desktop/messenger/client/src/components/profilePicture/ProfilePicture.tsx":"11","/Users/stan/Desktop/messenger/client/src/components/chat/chatHeader/ChatHeader.tsx":"12","/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/isMessageClose.tsx":"13","/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/chatMessage/ChatMessage.tsx":"14"},{"size":197,"mtime":1645697951908,"results":"15","hashOfConfig":"16"},{"size":294,"mtime":1645715499438,"results":"17","hashOfConfig":"16"},{"size":962,"mtime":1645712365502,"results":"18","hashOfConfig":"16"},{"size":473,"mtime":1645730262766,"results":"19","hashOfConfig":"16"},{"size":905,"mtime":1645695730112,"results":"20","hashOfConfig":"16"},{"size":4536,"mtime":1645712347269,"results":"21","hashOfConfig":"16"},{"size":367,"mtime":1645698361157,"results":"22","hashOfConfig":"16"},{"size":1405,"mtime":1645712376339,"results":"23","hashOfConfig":"16"},{"size":1001,"mtime":1645711775738,"results":"24","hashOfConfig":"16"},{"size":327,"mtime":1645702464255,"results":"25","hashOfConfig":"16"},{"size":1082,"mtime":1645712302869,"results":"26","hashOfConfig":"16"},{"size":739,"mtime":1645712909615,"results":"27","hashOfConfig":"16"},{"size":2338,"mtime":1645730401977,"results":"28","hashOfConfig":"16"},{"size":1610,"mtime":1645730417143,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1t21to1",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},"/Users/stan/Desktop/messenger/client/src/index.tsx",[],[],["76","77"],"/Users/stan/Desktop/messenger/client/src/contexts/UserProvider.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/components/sideBarConversationsList/SideBarConversationsList.tsx",["78","79"],[],"import React, { useContext } from \"react\";\nimport { Conversation } from \"../../ChatApp\";\nimport { UserContext } from \"../../contexts/UserProvider\";\nimport SideBarConversationItem from \"./sideBarItem/SideBarConversationItem\";\nimport \"./sideBarConversationsList.css\";\nimport SideBarSearchInput from \"./sideBarHeader/sideBarSearchInput/SideBarSearchInput\";\nimport SideBarHeader from \"./sideBarHeader/SideBarHeader\";\n\nconst ConversationSideBar = ({\n  conversations,\n}: {\n  conversations: Conversation[];\n}) => {\n  const userContext = useContext(UserContext);\n\n  return (\n    <div className=\"side-bar-conversations-list-container\">\n      <SideBarHeader />\n      <div className=\"side-bar-conversations-list-wrapper\">\n        {conversations.map((conversation) => (\n          <SideBarConversationItem\n            key={conversation._id}\n            conversation={conversation}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ConversationSideBar;\n","/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/MessagesList.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/components/chat/chatInput/ChatInput.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/ChatApp.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/App.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/components/sideBarConversationsList/sideBarItem/SideBarConversationItem.tsx",["80"],[],"import React, { useContext } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Conversation } from \"../../../ChatApp\";\nimport { UserContext } from \"../../../contexts/UserProvider\";\nimport ProfilePicture from \"../../profilePicture/ProfilePicture\";\nimport \"./sideBarConversationItem.css\";\n\nconst SideBarConversationItem = ({\n  conversation,\n}: {\n  conversation: Conversation;\n}) => {\n  const userContext = useContext(UserContext);\n  const currentConversatonId = useParams().conversationId;\n\n  return (\n    <Link\n      className=\"Link\"\n      to={\"/\" + conversation._id}\n      style={{ marginBottom: \"5px\" }}\n    >\n      <div\n        className={\n          conversation._id === currentConversatonId\n            ? \"side-bar-conversation-item current\"\n            : \"side-bar-conversation-item\"\n        }\n      >\n        <ProfilePicture\n          key={conversation._id}\n          members={conversation.membersInfos}\n          size=\"large\"\n        />\n        <div className=\"side-bar-conversation-item-infos\">\n          <h1 className=\"side-bar-members-usernames\">\n            {conversation.membersInfos.map((member) => {\n              return member.username;\n            })}\n          </h1>\n          <p className=\"side-bar-conversation-item-last-message\">\n            bla bla bla...\n          </p>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default SideBarConversationItem;\n","/Users/stan/Desktop/messenger/client/src/components/sideBarConversationsList/sideBarHeader/SideBarHeader.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/components/sideBarConversationsList/sideBarHeader/sideBarSearchInput/SideBarSearchInput.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/components/profilePicture/ProfilePicture.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/components/chat/chatHeader/ChatHeader.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/isMessageClose.tsx",[],[],"/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/chatMessage/ChatMessage.tsx",["81","82","83","84","85","86","87","88"],[],"import moment from \"moment\";\nimport React, { useContext } from \"react\";\nimport { Message } from \"../../../../ChatApp\";\nimport { UserContext } from \"../../../../contexts/UserProvider\";\nimport { hasCloseNeighbor } from \"../isMessageClose\";\nimport \"./chatMessage.css\";\n\nconst ChatMessage = ({\n  message,\n  messages,\n  i,\n}: {\n  message: Message;\n  messages: Message[];\n  i: number;\n}) => {\n  const { user, setUser } = useContext(UserContext);\n  const isOwnMessage = user?._id === message.userInfos._id;\n  const isNextMessageClose = hasCloseNeighbor({\n    order: \"next\",\n    messages,\n    i,\n  });\n  const isPrevMessageClose = hasCloseNeighbor({\n    order: \"prev\",\n    messages,\n    i,\n  });\n  const has2Neighbors = \"conversation-message up down\";\n  const hasNeighborAbove = \"conversation-message up\";\n  const hasNeighborBelow = \"conversation-message down\";\n  const has2NeighborsAndIsOwn = \"conversation-message own up down\";\n  const hasNeighborAboveAndIsOwn = \"conversation-message own up\";\n  const hasNeighborBelowAndIsOwn = \"conversation-message own down\";\n\n  return (\n    <div\n      key={message._id}\n      className={\n        isOwnMessage\n          ? \"conversation-message-wrapper own\"\n          : \"conversation-message-wrapper\"\n      }\n    >\n      <p\n        className={\n          isOwnMessage ? \"conversation-message own\" : \"conversation-message\"\n        }\n      >\n        {message.content}\n      </p>\n      {!isNextMessageClose && (\n        <p className=\"conversation-message-date\">\n          {moment(message.createdAt).format(\"H:mm\")}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ChatMessage;\n",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":26},{"ruleId":"93","severity":1,"message":"97","line":14,"column":9,"nodeType":"95","messageId":"96","endLine":14,"endColumn":20},{"ruleId":"93","severity":1,"message":"97","line":13,"column":9,"nodeType":"95","messageId":"96","endLine":13,"endColumn":20},{"ruleId":"93","severity":1,"message":"98","line":17,"column":17,"nodeType":"95","messageId":"96","endLine":17,"endColumn":24},{"ruleId":"93","severity":1,"message":"99","line":24,"column":9,"nodeType":"95","messageId":"96","endLine":24,"endColumn":27},{"ruleId":"93","severity":1,"message":"100","line":29,"column":9,"nodeType":"95","messageId":"96","endLine":29,"endColumn":22},{"ruleId":"93","severity":1,"message":"101","line":30,"column":9,"nodeType":"95","messageId":"96","endLine":30,"endColumn":25},{"ruleId":"93","severity":1,"message":"102","line":31,"column":9,"nodeType":"95","messageId":"96","endLine":31,"endColumn":25},{"ruleId":"93","severity":1,"message":"103","line":32,"column":9,"nodeType":"95","messageId":"96","endLine":32,"endColumn":30},{"ruleId":"93","severity":1,"message":"104","line":33,"column":9,"nodeType":"95","messageId":"96","endLine":33,"endColumn":33},{"ruleId":"93","severity":1,"message":"105","line":34,"column":9,"nodeType":"95","messageId":"96","endLine":34,"endColumn":33},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"@typescript-eslint/no-unused-vars","'SideBarSearchInput' is defined but never used.","Identifier","unusedVar","'userContext' is assigned a value but never used.","'setUser' is assigned a value but never used.","'isPrevMessageClose' is assigned a value but never used.","'has2Neighbors' is assigned a value but never used.","'hasNeighborAbove' is assigned a value but never used.","'hasNeighborBelow' is assigned a value but never used.","'has2NeighborsAndIsOwn' is assigned a value but never used.","'hasNeighborAboveAndIsOwn' is assigned a value but never used.","'hasNeighborBelowAndIsOwn' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]