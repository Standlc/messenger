{"ast":null,"code":"var _jsxFileName = \"/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/MessagesList.tsx\",\n    _s = $RefreshSig$();\n\nimport moment from \"moment\";\nimport React, { useContext } from \"react\";\nimport { UserContext } from \"../../../contexts/UserProvider\";\nimport \"./messageConversationList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessagesList = _ref => {\n  _s();\n\n  let {\n    messages\n  } = _ref;\n  const {\n    user,\n    setUser\n  } = useContext(UserContext); // console.log(moment(messages[0]?.createdAt).format());\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-message-list-container\",\n    children: messages.map((message, i) => {\n      const isOwnMessage = (user === null || user === void 0 ? void 0 : user._id) === message.userInfos._id;\n\n      const isPrevMessageTimeCloe = () => {\n        if (!messages[i + 1]) return false;\n        if (moment(message.createdAt).format().substring(0, 4) < moment(messages[i + 1].createdAt).format().substring(0, 4)) return false;\n        if (moment(message.createdAt).format().substring(5, 7) < moment(messages[i + 1].createdAt).format().substring(5, 7)) return false;\n        if (moment(message.createdAt).format().substring(8, 10) < moment(messages[i + 1].createdAt).format().substring(8, 10)) return false;\n        if (moment(message.createdAt).format().substring(11, 13) < moment(messages[i + 1].createdAt).format().substring(11, 13)) return false;\n        if (moment(message.createdAt).format().substring(14, 16) < moment(messages[i + 1].createdAt).format().substring(14, 16)) return false;\n        return true; // console.log(\n        //   moment(message.createdAt).format().substring(14, 16) <\n        //     moment(messages[i + 1].createdAt)\n        //       .format()\n        //       .substring(14, 16)\n        // );\n      };\n\n      console.log(isPrevMessageTimeCloe());\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isOwnMessage ? \"conversation-message-wrapper own\" : \"conversation-message-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: isOwnMessage ? \"conversation-message own\" : \"conversation-message\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"conversation-message-date\",\n          children: moment(message.createdAt).format(\"H:mm\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, message._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessagesList, \"74GGDIL3agQW3CqnnuL98bKYYX0=\");\n\n_c = MessagesList;\nexport default MessagesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagesList\");","map":{"version":3,"sources":["/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/MessagesList.tsx"],"names":["moment","React","useContext","UserContext","MessagesList","messages","user","setUser","map","message","i","isOwnMessage","_id","userInfos","isPrevMessageTimeCloe","createdAt","format","substring","console","log","content"],"mappings":"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","sourcesContent":["import moment from \"moment\";\nimport React, { useContext } from \"react\";\nimport { Message } from \"../../../ChatApp\";\nimport { UserContext } from \"../../../contexts/UserProvider\";\nimport \"./messageConversationList.css\";\n\nconst MessagesList = ({ messages }: { messages: Message[] }) => {\n  const { user, setUser } = useContext(UserContext);\n  // console.log(moment(messages[0]?.createdAt).format());\n\n  return (\n    <div className=\"conversation-message-list-container\">\n      {messages.map((message, i) => {\n        const isOwnMessage = user?._id === message.userInfos._id;\n\n        const isPrevMessageTimeCloe = () => {\n          if (!messages[i + 1]) return false;\n          if (\n            moment(message.createdAt).format().substring(0, 4) <\n            moment(messages[i + 1].createdAt)\n              .format()\n              .substring(0, 4)\n          )\n            return false;\n          if (\n            moment(message.createdAt).format().substring(5, 7) <\n            moment(messages[i + 1].createdAt)\n              .format()\n              .substring(5, 7)\n          )\n            return false;\n\n          if (\n            moment(message.createdAt).format().substring(8, 10) <\n            moment(messages[i + 1].createdAt)\n              .format()\n              .substring(8, 10)\n          )\n            return false;\n\n          if (\n            moment(message.createdAt).format().substring(11, 13) <\n            moment(messages[i + 1].createdAt)\n              .format()\n              .substring(11, 13)\n          )\n            return false;\n\n          if (\n            moment(message.createdAt).format().substring(14, 16) <\n            moment(messages[i + 1].createdAt)\n              .format()\n              .substring(14, 16)\n          )\n            return false;\n          return true;\n\n          // console.log(\n          //   moment(message.createdAt).format().substring(14, 16) <\n          //     moment(messages[i + 1].createdAt)\n          //       .format()\n          //       .substring(14, 16)\n          // );\n        };\n        console.log(isPrevMessageTimeCloe());\n        return (\n          <div\n            key={message._id}\n            className={\n              isOwnMessage\n                ? \"conversation-message-wrapper own\"\n                : \"conversation-message-wrapper\"\n            }\n          >\n            <p\n              className={\n                isOwnMessage\n                  ? \"conversation-message own\"\n                  : \"conversation-message\"\n              }\n            >\n              {message.content}\n            </p>\n            <p className=\"conversation-message-date\">\n              {moment(message.createdAt).format(\"H:mm\")}\n            </p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default MessagesList;\n"]},"metadata":{},"sourceType":"module"}