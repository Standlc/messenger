{"ast":null,"code":"var _jsxFileName = \"/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/MessagesList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport ChatMessage from \"./chatMessage/ChatMessage\";\nimport \"./messagesList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessagesList = _ref => {\n  _s();\n\n  let {\n    messages\n  } = _ref;\n  const chatMessagesWrapperRef = useRef(null);\n  const [loading, setLoading] = useState(true);\n\n  const fetchMessagesWhenReachingTop = () => {\n    const chatMessageRefCurrent = chatMessagesWrapperRef.current;\n    if (!chatMessageRefCurrent) return;\n    const scrollableHeight = chatMessageRefCurrent.scrollHeight - chatMessageRefCurrent.getBoundingClientRect().height;\n\n    const hasReachedTop = () => {\n      if (scrollableHeight + chatMessageRefCurrent.scrollTop > 0) return false;else return true;\n    }; // console.log(hasReachedTop());\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-messages-list-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onScroll: fetchMessagesWhenReachingTop,\n      ref: chatMessagesWrapperRef,\n      className: \"chat-messages-list-wrapper\",\n      children: messages.map((message, i) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        messages: messages,\n        i: i\n      }, message._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessagesList, \"Qbm5mgeusodAm3PVasSAYGYwr5s=\");\n\n_c = MessagesList;\nexport default MessagesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagesList\");","map":{"version":3,"sources":["/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/MessagesList.tsx"],"names":["React","useRef","useState","ChatMessage","MessagesList","messages","chatMessagesWrapperRef","loading","setLoading","fetchMessagesWhenReachingTop","chatMessageRefCurrent","current","scrollableHeight","scrollHeight","getBoundingClientRect","height","hasReachedTop","scrollTop","map","message","i","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,oBAAP;;;AAEA,MAAMC,YAAY,GAAG,QAA2C;AAAA;;AAAA,MAA1C;AAAEC,IAAAA;AAAF,GAA0C;AAC9D,QAAMC,sBAAsB,GAAGL,MAAM,CAAiB,IAAjB,CAArC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMO,4BAA4B,GAAG,MAAM;AACzC,UAAMC,qBAAqB,GAAGJ,sBAAsB,CAACK,OAArD;AACA,QAAI,CAACD,qBAAL,EAA4B;AAC5B,UAAME,gBAAgB,GACpBF,qBAAqB,CAACG,YAAtB,GACAH,qBAAqB,CAACI,qBAAtB,GAA8CC,MAFhD;;AAGA,UAAMC,aAAa,GAAG,MAAM;AAC1B,UAAIJ,gBAAgB,GAAGF,qBAAqB,CAACO,SAAzC,GAAqD,CAAzD,EAA4D,OAAO,KAAP,CAA5D,KACK,OAAO,IAAP;AACN,KAHD,CANyC,CAUzC;;AACD,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA,2BACE;AACE,MAAA,QAAQ,EAAER,4BADZ;AAEE,MAAA,GAAG,EAAEH,sBAFP;AAGE,MAAA,SAAS,EAAC,4BAHZ;AAAA,gBAKGD,QAAQ,CAACa,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,kBACZ,QAAC,WAAD;AAA+B,QAAA,QAAQ,EAAEf,QAAzC;AAAmD,QAAA,CAAC,EAAEe;AAAtD,SAAkBD,OAAO,CAACE,GAA1B;AAAA;AAAA;AAAA;AAAA,cADD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA9BD;;GAAMjB,Y;;KAAAA,Y;AAgCN,eAAeA,YAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Message } from \"../../../types\";\nimport ChatMessage from \"./chatMessage/ChatMessage\";\nimport \"./messagesList.css\";\n\nconst MessagesList = ({ messages }: { messages: Message[] }) => {\n  const chatMessagesWrapperRef = useRef<HTMLDivElement>(null);\n  const [loading, setLoading] = useState(true);\n\n  const fetchMessagesWhenReachingTop = () => {\n    const chatMessageRefCurrent = chatMessagesWrapperRef.current;\n    if (!chatMessageRefCurrent) return;\n    const scrollableHeight =\n      chatMessageRefCurrent.scrollHeight -\n      chatMessageRefCurrent.getBoundingClientRect().height;\n    const hasReachedTop = () => {\n      if (scrollableHeight + chatMessageRefCurrent.scrollTop > 0) return false;\n      else return true;\n    };\n    // console.log(hasReachedTop());\n  };\n\n  return (\n    <div className=\"chat-messages-list-container\">\n      <div\n        onScroll={fetchMessagesWhenReachingTop}\n        ref={chatMessagesWrapperRef}\n        className=\"chat-messages-list-wrapper\"\n      >\n        {messages.map((message, i) => (\n          <ChatMessage key={message._id} messages={messages} i={i} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MessagesList;\n"]},"metadata":{},"sourceType":"module"}