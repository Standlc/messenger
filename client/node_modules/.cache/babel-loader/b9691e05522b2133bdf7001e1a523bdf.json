{"ast":null,"code":"var _jsxFileName = \"/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/chatMessage/ChatMessage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { UserContext } from \"../../../../contexts/UserProvider\";\nimport { groupChatMessage, hasNeighborBelow } from \"./groupeChatMessage\";\nimport \"./chatMessage.css\";\nimport { scrollIntoView } from \"./scrollIntoView\";\nimport ProfilePicture from \"../../../profilePicture/ProfilePicture\";\nimport ChatDate from \"./chatTime/ChatDate\";\nimport { chatMessageDateFormat } from \"./chatMessageDateFormat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatMessage = _ref => {\n  _s();\n\n  let {\n    messages,\n    i\n  } = _ref;\n  const {\n    user\n  } = useContext(UserContext);\n  const isOwnMessage = (user === null || user === void 0 ? void 0 : user._id) === messages[i].userInfos._id;\n  const messageRef = useRef(null); //HOVER MESSAGE\n\n  const [mouseOverTimeOut, setMouseOverTimeOut] = useState();\n  const [isMouseHovering, setIsMouseHovering] = useState(false);\n\n  const handleMouseHoveringMessage = () => {\n    setMouseOverTimeOut(setTimeout(() => {\n      setIsMouseHovering(true);\n    }, 500));\n  };\n\n  const handleMouseLeaving = () => {\n    if (mouseOverTimeOut) clearTimeout(mouseOverTimeOut);\n    setIsMouseHovering(false);\n  };\n\n  useEffect(() => {\n    groupChatMessage({\n      messages,\n      i,\n      messageRef,\n      isOwnMessage\n    });\n  }, [messages, i, messageRef]);\n  useEffect(() => {\n    scrollIntoView({\n      messageRef,\n      messages,\n      i\n    });\n  }, [messageRef, messages, i]);\n\n  const hasMessageBelow = () => {\n    hasNeighborBelow({\n      message: messages[i],\n      messageBelow: messages[i - 1]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isOwnMessage ? \"chat-message-wrapper own\" : \"chat-message-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(ChatDate, {\n      messages: messages,\n      i: i\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isOwnMessage ? \"chat-message-text-PP own\" : \"chat-message-text-PP\",\n      children: [!hasNeighborBelow && !isOwnMessage && /*#__PURE__*/_jsxDEV(ProfilePicture, {\n        members: [messages[i].userInfos],\n        size: \"small\",\n        absolute: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onMouseEnter: handleMouseHoveringMessage,\n        onMouseLeave: handleMouseLeaving,\n        ref: messageRef,\n        className: isOwnMessage ? \"chat-message own\" : \"chat-message\",\n        children: [messages[i].content, isMouseHovering && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: isOwnMessage ? \"chat-message-date-small own\" : \"chat-message-date-small\",\n          children: chatMessageDateFormat({\n            messages,\n            i\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatMessage, \"PvdrB/jeEpbt987kU9MYzMKtHco=\");\n\n_c = ChatMessage;\nexport default ChatMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMessage\");","map":{"version":3,"sources":["/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/chatMessage/ChatMessage.tsx"],"names":["React","useContext","useEffect","useRef","useState","UserContext","groupChatMessage","hasNeighborBelow","scrollIntoView","ProfilePicture","ChatDate","chatMessageDateFormat","ChatMessage","messages","i","user","isOwnMessage","_id","userInfos","messageRef","mouseOverTimeOut","setMouseOverTimeOut","isMouseHovering","setIsMouseHovering","handleMouseHoveringMessage","setTimeout","handleMouseLeaving","clearTimeout","hasMessageBelow","message","messageBelow","content"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { Message } from \"../../../../types\";\nimport { UserContext } from \"../../../../contexts/UserProvider\";\nimport { groupChatMessage, hasNeighborBelow } from \"./groupeChatMessage\";\nimport \"./chatMessage.css\";\nimport { scrollIntoView } from \"./scrollIntoView\";\nimport ProfilePicture from \"../../../profilePicture/ProfilePicture\";\nimport ChatDate from \"./chatTime/ChatDate\";\nimport { chatMessageDateFormat } from \"./chatMessageDateFormat\";\n\nconst ChatMessage = ({ messages, i }: { messages: Message[]; i: number }) => {\n  const { user } = useContext(UserContext);\n  const isOwnMessage = user?._id === messages[i].userInfos._id;\n  const messageRef = useRef<HTMLDivElement>(null);\n\n  //HOVER MESSAGE\n  const [mouseOverTimeOut, setMouseOverTimeOut] = useState<NodeJS.Timeout>();\n  const [isMouseHovering, setIsMouseHovering] = useState(false);\n\n  const handleMouseHoveringMessage = () => {\n    setMouseOverTimeOut(\n      setTimeout(() => {\n        setIsMouseHovering(true);\n      }, 500)\n    );\n  };\n  const handleMouseLeaving = () => {\n    if (mouseOverTimeOut) clearTimeout(mouseOverTimeOut);\n    setIsMouseHovering(false);\n  };\n\n  useEffect(() => {\n    groupChatMessage({ messages, i, messageRef, isOwnMessage });\n  }, [messages, i, messageRef]);\n\n  useEffect(() => {\n    scrollIntoView({ messageRef, messages, i });\n  }, [messageRef, messages, i]);\n\n  const hasMessageBelow = () => {\n    hasNeighborBelow({ message: messages[i], messageBelow: messages[i - 1] });\n  };\n\n  return (\n    <div\n      className={\n        isOwnMessage ? \"chat-message-wrapper own\" : \"chat-message-wrapper\"\n      }\n    >\n      <ChatDate messages={messages} i={i} />\n      <div\n        className={\n          isOwnMessage ? \"chat-message-text-PP own\" : \"chat-message-text-PP\"\n        }\n      >\n        {!hasNeighborBelow && !isOwnMessage && (\n          <ProfilePicture\n            members={[messages[i].userInfos]}\n            size=\"small\"\n            absolute={true}\n          />\n        )}\n\n        <div\n          onMouseEnter={handleMouseHoveringMessage}\n          onMouseLeave={handleMouseLeaving}\n          ref={messageRef}\n          className={isOwnMessage ? \"chat-message own\" : \"chat-message\"}\n        >\n          {messages[i].content}\n\n          {isMouseHovering && (\n            <div\n              className={\n                isOwnMessage\n                  ? \"chat-message-date-small own\"\n                  : \"chat-message-date-small\"\n              }\n            >\n              {chatMessageDateFormat({ messages, i })}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatMessage;\n"]},"metadata":{},"sourceType":"module"}