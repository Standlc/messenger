{"ast":null,"code":"import { DateTime } from \"luxon\";\nexport const groupChatMessage = _ref => {\n  let {\n    messages,\n    i,\n    messageRef,\n    isOwnMessage\n  } = _ref;\n  const message = messages[i];\n  const messageDate = message.createdAt;\n  const messageAbove = messages[i + 1];\n  const messageBelow = messages[i - 1];\n  const messageRefCurrent = messageRef.current;\n  if (!messageRefCurrent) return;\n\n  const hasNeighborBelow = () => {\n    if (!messageBelow || messageBelow.userInfos._id !== message.userInfos._id) return false;\n    const messageBelowDate = messageBelow.createdAt;\n    if (time(messageDate, \"year\") < time(messageBelowDate, \"year\")) return;\n    if (time(messageDate, \"month\") < time(messageBelowDate, \"month\")) return;\n    if (time(messageDate, \"day\") < time(messageBelowDate, \"day\")) return;\n    return !(time(messageDate, \"hour\") < time(messageBelowDate, \"hour\"));\n  };\n\n  const hasNeighborAbove = () => {\n    if (!messageAbove || messageAbove.userInfos._id !== message.userInfos._id) return false;\n    const messageAboveDate = messageAbove.createdAt;\n    if (time(messageDate, \"year\") > time(messageAboveDate, \"year\")) return;\n    if (time(messageDate, \"month\") > time(messageAboveDate, \"month\")) return;\n    if (time(messageDate, \"day\") > time(messageAboveDate, \"day\")) return;\n    return !(time(messageDate, \"hour\") > time(messageAboveDate, \"hour\"));\n  };\n\n  const surroundedStyle = () => {\n    return isOwnMessage ? (messageRefCurrent.style.borderTopRightRadius = \"5px\", messageRefCurrent.style.borderBottomRightRadius = \"5px\") : (messageRefCurrent.style.borderTopLeftRadius = \"5px\", messageRefCurrent.style.borderBottomLeftRadius = \"5px\");\n  };\n\n  const borderBottomStyle = () => {\n    return isOwnMessage ? messageRefCurrent.style.borderBottomRightRadius = \"5px\" : messageRefCurrent.style.borderBottomLeftRadius = \"5px\";\n  };\n\n  const borderTopStyle = () => {\n    return isOwnMessage ? messageRefCurrent.style.borderTopRightRadius = \"5px\" : messageRefCurrent.style.borderTopLeftRadius = \"5px\";\n  };\n\n  const assigningStyles = () => {\n    if (hasNeighborAbove() && hasNeighborBelow()) surroundedStyle();\n    if (hasNeighborAbove() && !hasNeighborBelow()) borderTopStyle();\n    if (!hasNeighborAbove() && hasNeighborBelow()) borderBottomStyle();\n  };\n\n  assigningStyles();\n};\n\nconst time = (messageCreatedAt, dateType) => {\n  const Date = DateTime.fromISO(messageCreatedAt);\n  const timeTable = {\n    year: Date.toLocaleString({\n      year: \"2-digit\"\n    }),\n    month: Date.toLocaleString({\n      month: \"2-digit\"\n    }),\n    day: Date.toLocaleString({\n      day: \"2-digit\"\n    }),\n    hour: Date.toLocaleString({\n      hour: \"2-digit\",\n      hourCycle: \"h23\"\n    })\n  };\n  const isValidDateType = dateType === \"year\" || dateType === \"month\" || dateType === \"day\" || dateType === \"hour\";\n  return parseInt(timeTable[isValidDateType ? dateType : \"hour\"]);\n};","map":{"version":3,"sources":["/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/chatMessage/isMessageClose.tsx"],"names":["DateTime","groupChatMessage","messages","i","messageRef","isOwnMessage","message","messageDate","createdAt","messageAbove","messageBelow","messageRefCurrent","current","hasNeighborBelow","userInfos","_id","messageBelowDate","time","hasNeighborAbove","messageAboveDate","surroundedStyle","style","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","borderBottomStyle","borderTopStyle","assigningStyles","messageCreatedAt","dateType","Date","fromISO","timeTable","year","toLocaleString","month","day","hour","hourCycle","isValidDateType","parseInt"],"mappings":"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","sourcesContent":["import { Message } from \"../../../../types\";\nimport { DateTime } from \"luxon\";\nimport { RefObject } from \"react\";\n\nexport const groupChatMessage = ({\n  messages,\n  i,\n  messageRef,\n  isOwnMessage,\n}: {\n  messages: Message[];\n  i: number;\n  messageRef: RefObject<HTMLDivElement>;\n  isOwnMessage: boolean;\n}) => {\n  const message = messages[i];\n  const messageDate = message.createdAt;\n  const messageAbove = messages[i + 1];\n  const messageBelow = messages[i - 1];\n  const messageRefCurrent = messageRef.current;\n  if (!messageRefCurrent) return;\n\n  const hasNeighborBelow = () => {\n    if (!messageBelow || messageBelow.userInfos._id !== message.userInfos._id)\n      return false;\n    const messageBelowDate = messageBelow.createdAt;\n    if (time(messageDate, \"year\") < time(messageBelowDate, \"year\")) return;\n    if (time(messageDate, \"month\") < time(messageBelowDate, \"month\")) return;\n    if (time(messageDate, \"day\") < time(messageBelowDate, \"day\")) return;\n    return !(time(messageDate, \"hour\") < time(messageBelowDate, \"hour\"));\n  };\n  const hasNeighborAbove = () => {\n    if (!messageAbove || messageAbove.userInfos._id !== message.userInfos._id)\n      return false;\n    const messageAboveDate = messageAbove.createdAt;\n    if (time(messageDate, \"year\") > time(messageAboveDate, \"year\")) return;\n    if (time(messageDate, \"month\") > time(messageAboveDate, \"month\")) return;\n    if (time(messageDate, \"day\") > time(messageAboveDate, \"day\")) return;\n    return !(time(messageDate, \"hour\") > time(messageAboveDate, \"hour\"));\n  };\n\n  const surroundedStyle = () => {\n    return isOwnMessage\n      ? ((messageRefCurrent.style.borderTopRightRadius = \"5px\"),\n        (messageRefCurrent.style.borderBottomRightRadius = \"5px\"))\n      : ((messageRefCurrent.style.borderTopLeftRadius = \"5px\"),\n        (messageRefCurrent.style.borderBottomLeftRadius = \"5px\"));\n  };\n  const borderBottomStyle = () => {\n    return isOwnMessage\n      ? (messageRefCurrent.style.borderBottomRightRadius = \"5px\")\n      : (messageRefCurrent.style.borderBottomLeftRadius = \"5px\");\n  };\n  const borderTopStyle = () => {\n    return isOwnMessage\n      ? (messageRefCurrent.style.borderTopRightRadius = \"5px\")\n      : (messageRefCurrent.style.borderTopLeftRadius = \"5px\");\n  };\n\n  const assigningStyles = () => {\n    if (hasNeighborAbove() && hasNeighborBelow()) surroundedStyle();\n    if (hasNeighborAbove() && !hasNeighborBelow()) borderTopStyle();\n    if (!hasNeighborAbove() && hasNeighborBelow()) borderBottomStyle();\n  };\n  assigningStyles();\n};\n\nconst time = (messageCreatedAt: string, dateType: string) => {\n  const Date = DateTime.fromISO(messageCreatedAt);\n  const timeTable = {\n    year: Date.toLocaleString({\n      year: \"2-digit\",\n    }),\n    month: Date.toLocaleString({\n      month: \"2-digit\",\n    }),\n    day: Date.toLocaleString({\n      day: \"2-digit\",\n    }),\n    hour: Date.toLocaleString({\n      hour: \"2-digit\",\n      hourCycle: \"h23\",\n    }),\n  };\n  const isValidDateType =\n    dateType === \"year\" ||\n    dateType === \"month\" ||\n    dateType === \"day\" ||\n    dateType === \"hour\";\n\n  return parseInt(timeTable[isValidDateType ? dateType : \"hour\"]);\n};\n"]},"metadata":{},"sourceType":"module"}