{"ast":null,"code":"var _jsxFileName = \"/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/chatMessage/chatTime/ChatDate.tsx\";\nimport React from \"react\";\nimport \"./chatDate.css\";\nimport { DateTime } from \"luxon\";\nimport { hasAboveNeighborOfSameTime } from \"./hasAboveNeighbor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatDate = _ref => {\n  let {\n    messages,\n    i\n  } = _ref;\n  const hasNeighborAbove = hasAboveNeighborOfSameTime({\n    messages,\n    i\n  });\n\n  const messageTimeFormat = () => {\n    const today = DateTime.fromISO(new Date().toISOString()).toLocaleString();\n    const messageDate = DateTime.fromISO(messages[i].createdAt).toLocaleString();\n    const yearMonthDayHourMinute = DateTime.fromISO(messages[i].createdAt).toLocaleString({\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hourCycle: \"h23\"\n    });\n    const dayHourMinute = DateTime.fromISO(messages[i].createdAt).toLocaleString({\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hourCycle: \"h23\"\n    });\n\n    if (today !== messageDate) {\n      return yearMonthDayHourMinute;\n    } else {\n      return dayHourMinute;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !hasNeighborAbove && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message-date-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"chat-message-date\",\n        children: messageTimeFormat()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message-date-divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c = ChatDate;\nexport default ChatDate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatDate\");","map":{"version":3,"sources":["/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/chatMessage/chatTime/ChatDate.tsx"],"names":["React","DateTime","hasAboveNeighborOfSameTime","ChatDate","messages","i","hasNeighborAbove","messageTimeFormat","today","fromISO","Date","toISOString","toLocaleString","messageDate","createdAt","yearMonthDayHourMinute","month","day","hour","minute","hourCycle","dayHourMinute"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,0BAAT,QAA2C,oBAA3C;;;;AAEA,MAAMC,QAAQ,GAAG,QAAyD;AAAA,MAAxD;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAwD;AACxE,QAAMC,gBAAgB,GAAGJ,0BAA0B,CAAC;AAClDE,IAAAA,QADkD;AAElDC,IAAAA;AAFkD,GAAD,CAAnD;;AAKA,QAAME,iBAAiB,GAAG,MAAM;AAC9B,UAAMC,KAAK,GAAGP,QAAQ,CAACQ,OAAT,CAAiB,IAAIC,IAAJ,GAAWC,WAAX,EAAjB,EAA2CC,cAA3C,EAAd;AACA,UAAMC,WAAW,GAAGZ,QAAQ,CAACQ,OAAT,CAClBL,QAAQ,CAACC,CAAD,CAAR,CAAYS,SADM,EAElBF,cAFkB,EAApB;AAIA,UAAMG,sBAAsB,GAAGd,QAAQ,CAACQ,OAAT,CAC7BL,QAAQ,CAACC,CAAD,CAAR,CAAYS,SADiB,EAE7BF,cAF6B,CAEd;AACfI,MAAAA,KAAK,EAAE,SADQ;AAEfC,MAAAA,GAAG,EAAE,SAFU;AAGfC,MAAAA,IAAI,EAAE,SAHS;AAIfC,MAAAA,MAAM,EAAE,SAJO;AAKfC,MAAAA,SAAS,EAAE;AALI,KAFc,CAA/B;AASA,UAAMC,aAAa,GAAGpB,QAAQ,CAACQ,OAAT,CACpBL,QAAQ,CAACC,CAAD,CAAR,CAAYS,SADQ,EAEpBF,cAFoB,CAEL;AACfM,MAAAA,IAAI,EAAE,SADS;AAEfC,MAAAA,MAAM,EAAE,SAFO;AAGfC,MAAAA,SAAS,EAAE;AAHI,KAFK,CAAtB;;AAQA,QAAIZ,KAAK,KAAKK,WAAd,EAA2B;AACzB,aAAOE,sBAAP;AACD,KAFD,MAEO;AACL,aAAOM,aAAP;AACD;AACF,GA5BD;;AA8BA,sBACE;AAAA,cACG,CAACf,gBAAD,iBACC;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA,kBAAkCC,iBAAiB;AAAnD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AAUD,CA9CD;;KAAMJ,Q;AAgDN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport \"./chatDate.css\";\nimport { Message } from \"../../../../../ChatApp\";\nimport { DateTime } from \"luxon\";\nimport { hasAboveNeighborOfSameTime } from \"./hasAboveNeighbor\";\n\nconst ChatDate = ({ messages, i }: { messages: Message[]; i: number }) => {\n  const hasNeighborAbove = hasAboveNeighborOfSameTime({\n    messages,\n    i,\n  });\n\n  const messageTimeFormat = () => {\n    const today = DateTime.fromISO(new Date().toISOString()).toLocaleString();\n    const messageDate = DateTime.fromISO(\n      messages[i].createdAt\n    ).toLocaleString();\n\n    const yearMonthDayHourMinute = DateTime.fromISO(\n      messages[i].createdAt\n    ).toLocaleString({\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hourCycle: \"h23\",\n    });\n    const dayHourMinute = DateTime.fromISO(\n      messages[i].createdAt\n    ).toLocaleString({\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hourCycle: \"h23\",\n    });\n\n    if (today !== messageDate) {\n      return yearMonthDayHourMinute;\n    } else {\n      return dayHourMinute;\n    }\n  };\n\n  return (\n    <>\n      {!hasNeighborAbove && (\n        <div className=\"chat-message-date-wrapper\">\n          <p className=\"chat-message-date\">{messageTimeFormat()}</p>\n          <div className=\"chat-message-date-divider\" />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ChatDate;\n"]},"metadata":{},"sourceType":"module"}