{"ast":null,"code":"var _jsxFileName = \"/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/chatMessage/ChatMessage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useState } from \"react\";\nimport { UserContext } from \"../../../../contexts/UserProvider\";\nimport { hasCloseNeighbor } from \"../isMessageClose\";\nimport \"./chatMessage.css\";\nimport ProfilePicture from \"../../../profilePicture/ProfilePicture\";\nimport ChatDate from \"./chatTime/ChatDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatMessage = _ref => {\n  _s();\n\n  let {\n    messages,\n    i\n  } = _ref;\n  const {\n    user\n  } = useContext(UserContext);\n  const messageRef = useRef(null);\n  const isOwnMessage = (user === null || user === void 0 ? void 0 : user._id) === messages[i].userInfos._id;\n  const [mouseOverTimeOut, setMouseOverTimeOut] = useState();\n  const [isMouseHovering, setIsMouseHovering] = useState(false); //HOVER MESSAGE\n\n  const handleMouseHoveringMessage = () => {\n    setMouseOverTimeOut(setTimeout(() => {\n      setIsMouseHovering(true);\n    }, 2000));\n  };\n\n  const handleMouseLeaving = () => {\n    if (mouseOverTimeOut) clearTimeout(mouseOverTimeOut);\n    setIsMouseHovering(false);\n  };\n\n  const hasNeighborBelow = hasCloseNeighbor({\n    order: \"next\",\n    messages,\n    i\n  });\n  const hasNeighborAbove = hasCloseNeighbor({\n    order: \"prev\",\n    messages,\n    i\n  });\n\n  const chatMessageClassName = () => {\n    if (isOwnMessage) {\n      if (hasNeighborBelow && hasNeighborAbove) return \"chat-message own-up-down\";else if (hasNeighborBelow && !hasNeighborAbove) return \"chat-message own-down\";else if (!hasNeighborBelow && hasNeighborAbove) return \"chat-message own-up\";else return \"chat-message own\";\n    } else {\n      if (hasNeighborBelow && hasNeighborAbove) return \"chat-message up-down\";else if (hasNeighborBelow && !hasNeighborAbove) return \"chat-message down\";else if (hasNeighborBelow && !hasNeighborAbove) return \"chat-message up\";else return \"chat-message\";\n    }\n  }; // useEffect(() => {\n  //   scrollIntoView(messageRef);\n  // }, [messageRef]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isOwnMessage ? \"chat-message-wrapper own\" : \"chat-message-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(ChatDate, {\n      messages: messages,\n      i: i\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message-text-PP\",\n      children: [!hasNeighborBelow && !isOwnMessage && /*#__PURE__*/_jsxDEV(ProfilePicture, {\n        members: [messages[i].userInfos],\n        size: \"small\",\n        absolute: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isMouseHovering ? \"chat-message-date-info mouse-hover\" : \"chat-message-date-info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onMouseEnter: handleMouseHoveringMessage,\n        onMouseLeave: handleMouseLeaving,\n        ref: messageRef,\n        className: chatMessageClassName(),\n        children: messages[i].content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatMessage, \"J7OWLNczCzl6m7YAqhi54tvxih0=\");\n\n_c = ChatMessage;\nexport default ChatMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMessage\");","map":{"version":3,"sources":["/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/chatMessage/ChatMessage.tsx"],"names":["React","useContext","useRef","useState","UserContext","hasCloseNeighbor","ProfilePicture","ChatDate","ChatMessage","messages","i","user","messageRef","isOwnMessage","_id","userInfos","mouseOverTimeOut","setMouseOverTimeOut","isMouseHovering","setIsMouseHovering","handleMouseHoveringMessage","setTimeout","handleMouseLeaving","clearTimeout","hasNeighborBelow","order","hasNeighborAbove","chatMessageClassName","content"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { Message } from \"../../../../types\";\nimport { UserContext } from \"../../../../contexts/UserProvider\";\nimport { hasCloseNeighbor } from \"../isMessageClose\";\nimport \"./chatMessage.css\";\nimport { scrollIntoView } from \"./scrollIntoView\";\nimport ProfilePicture from \"../../../profilePicture/ProfilePicture\";\nimport ChatDate from \"./chatTime/ChatDate\";\n\nconst ChatMessage = ({ messages, i }: { messages: Message[]; i: number }) => {\n  const { user } = useContext(UserContext);\n  const messageRef = useRef<HTMLParagraphElement>(null);\n  const isOwnMessage = user?._id === messages[i].userInfos._id;\n  const [mouseOverTimeOut, setMouseOverTimeOut] = useState<NodeJS.Timeout>();\n  const [isMouseHovering, setIsMouseHovering] = useState(false);\n\n  //HOVER MESSAGE\n  const handleMouseHoveringMessage = () => {\n    setMouseOverTimeOut(\n      setTimeout(() => {\n        setIsMouseHovering(true);\n      }, 2000)\n    );\n  };\n\n  const handleMouseLeaving = () => {\n    if (mouseOverTimeOut) clearTimeout(mouseOverTimeOut);\n    setIsMouseHovering(false);\n  };\n\n  const hasNeighborBelow = hasCloseNeighbor({\n    order: \"next\",\n    messages,\n    i,\n  });\n  const hasNeighborAbove = hasCloseNeighbor({\n    order: \"prev\",\n    messages,\n    i,\n  });\n\n  const chatMessageClassName = () => {\n    if (isOwnMessage) {\n      if (hasNeighborBelow && hasNeighborAbove)\n        return \"chat-message own-up-down\";\n      else if (hasNeighborBelow && !hasNeighborAbove)\n        return \"chat-message own-down\";\n      else if (!hasNeighborBelow && hasNeighborAbove)\n        return \"chat-message own-up\";\n      else return \"chat-message own\";\n    } else {\n      if (hasNeighborBelow && hasNeighborAbove) return \"chat-message up-down\";\n      else if (hasNeighborBelow && !hasNeighborAbove)\n        return \"chat-message down\";\n      else if (hasNeighborBelow && !hasNeighborAbove) return \"chat-message up\";\n      else return \"chat-message\";\n    }\n  };\n\n  // useEffect(() => {\n  //   scrollIntoView(messageRef);\n  // }, [messageRef]);\n\n  return (\n    <div\n      className={\n        isOwnMessage ? \"chat-message-wrapper own\" : \"chat-message-wrapper\"\n      }\n    >\n      <ChatDate messages={messages} i={i} />\n      <div className=\"chat-message-text-PP\">\n        {!hasNeighborBelow && !isOwnMessage && (\n          <ProfilePicture\n            members={[messages[i].userInfos]}\n            size=\"small\"\n            absolute={true}\n          />\n        )}\n        <div\n          className={\n            isMouseHovering\n              ? \"chat-message-date-info mouse-hover\"\n              : \"chat-message-date-info\"\n          }\n        ></div>\n        <p\n          onMouseEnter={handleMouseHoveringMessage}\n          onMouseLeave={handleMouseLeaving}\n          ref={messageRef}\n          className={chatMessageClassName()}\n        >\n          {messages[i].content}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatMessage;\n"]},"metadata":{},"sourceType":"module"}