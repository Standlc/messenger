{"ast":null,"code":"var _jsxFileName = \"/Users/stan/messenger/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// import moment from \"moment\";\nconst App = () => {\n  _s();\n\n  // const username = \"Nullllll\";\n  // const socket = io(\"http://localhost:8080\", {\n  //   transports: [\"websocket\", \"polling\"],\n  // });\n  // const [users, setUsers] = useState<any>([]);\n  // const [message, setMessage] = useState<any>(\"\");\n  // const [messages, setMessages] = useState<any>([]);\n  // useEffect(() => {\n  //   socket.on(\"connect\", () => {\n  //     socket.emit(\"username\", username);\n  //   });\n  //   socket.on(\"users\", (users: any) => {\n  //     setUsers(users);\n  //   });\n  //   socket.on(\"message\", (message: any) => {\n  //     setMessages([...messages, message]);\n  //   });\n  //   socket.on(\"connected\", (user: any) => {\n  //     setUsers([...users, user]);\n  //   });\n  //   socket.on(\"disconnected\", (id) => {\n  //     setUsers((users: any) => {\n  //       return users.filter((user: any) => user.id !== id);\n  //     });\n  //   });\n  // }, []);\n  // const submit = (e: any) => {\n  //   e.preventDefault();\n  //   socket.emit(\"send\", message);\n  //   setMessage(\"\");\n  // };\n  const user = {\n    _id: \"6214beb6e824cba2c81db0da\",\n    username: \"first\",\n    email: \"firstEmail\",\n    password: \"$2b$10$GSh2pLpCmxsg/cAWhScVA.dbKMSBLxMK.viZqiqBZNunJebqkx50m\",\n    createdAt: \"2022-02-22T10:45:10.155+00:00\",\n    updatedAt: \"2022-02-22T10:45:10.155+00:00\",\n    __v: 0\n  };\n  const [messages, setMessages] = useState([]);\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState();\n  useEffect(() => {\n    const getConversations = async () => {\n      const res = await axios.get(`http://localhost:5050/api/conversations/${user._id}`);\n      setConversations(res.data);\n    };\n\n    getConversations();\n  }, []);\n  useEffect(() => {\n    const getMessages = async () => {\n      const res = await axios.get(`http://localhost:5050/api/messages/${selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation._id}`);\n      setMessages(res.data);\n    };\n\n    getMessages();\n  }, [selectedConversation]);\n\n  const sendMessage = async () => {\n    const res = await axios.post(`http://localhost:5050/api/messages/${selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation._id}`, {\n      content: \"This is the first message sent from the app!\",\n      userID: user._id,\n      conversationID: selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation._id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginRight: \"100px\"\n      },\n      children: conversations.map(conversation => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: conversation.membersInfos.map(member => {\n            if (member._id !== user._id) return /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => setSelectedConversation(conversation),\n              children: member.username\n            }, member._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 21\n            }, this);\n          })\n        }, conversation._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [messages.map(message => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: message.content\n        }, message._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 18\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"your message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"RwplHwyQHH3Q6oePW+0LKw+MOy8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/stan/messenger/src/App.tsx"],"names":["axios","React","useEffect","useState","App","user","_id","username","email","password","createdAt","updatedAt","__v","messages","setMessages","conversations","setConversations","selectedConversation","setSelectedConversation","getConversations","res","get","data","getMessages","sendMessage","post","content","userID","conversationID","display","marginRight","map","conversation","membersInfos","member","message"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { stringify } from \"querystring\";\nimport React, { useEffect, useState } from \"react\";\n\nimport io from \"socket.io-client\";\n// import moment from \"moment\";\n\nconst App = () => {\n  // const username = \"Nullllll\";\n  // const socket = io(\"http://localhost:8080\", {\n  //   transports: [\"websocket\", \"polling\"],\n  // });\n\n  // const [users, setUsers] = useState<any>([]);\n  // const [message, setMessage] = useState<any>(\"\");\n  // const [messages, setMessages] = useState<any>([]);\n\n  // useEffect(() => {\n  //   socket.on(\"connect\", () => {\n  //     socket.emit(\"username\", username);\n  //   });\n\n  //   socket.on(\"users\", (users: any) => {\n  //     setUsers(users);\n  //   });\n\n  //   socket.on(\"message\", (message: any) => {\n  //     setMessages([...messages, message]);\n  //   });\n\n  //   socket.on(\"connected\", (user: any) => {\n  //     setUsers([...users, user]);\n  //   });\n\n  //   socket.on(\"disconnected\", (id) => {\n  //     setUsers((users: any) => {\n  //       return users.filter((user: any) => user.id !== id);\n  //     });\n  //   });\n  // }, []);\n\n  // const submit = (e: any) => {\n  //   e.preventDefault();\n  //   socket.emit(\"send\", message);\n  //   setMessage(\"\");\n  // };\n\n  const user = {\n    _id: \"6214beb6e824cba2c81db0da\",\n    username: \"first\",\n    email: \"firstEmail\",\n    password: \"$2b$10$GSh2pLpCmxsg/cAWhScVA.dbKMSBLxMK.viZqiqBZNunJebqkx50m\",\n    createdAt: \"2022-02-22T10:45:10.155+00:00\",\n    updatedAt: \"2022-02-22T10:45:10.155+00:00\",\n    __v: 0,\n  };\n\n  const [messages, setMessages] = useState<\n    {\n      _id: string;\n      content: string;\n      userID: string;\n      conversationID: string;\n      createdAt: Date;\n      updatedAt: Date;\n      __v: number;\n    }[]\n  >([]);\n\n  const [conversations, setConversations] = useState<\n    {\n      _id: string;\n      createdAt: Date;\n      updatedAt: Date;\n      __v: number;\n      membersInfos: {\n        _id: string;\n        username: string;\n        email: string;\n        createdAt: Date;\n        updatedAt: Date;\n        __v: number;\n      }[];\n    }[]\n  >([]);\n\n  const [selectedConversation, setSelectedConversation] = useState<{\n    _id: string;\n    createdAt: Date;\n    updatedAt: Date;\n    __v: number;\n    membersInfos: {\n      _id: string;\n      username: string;\n      email: string;\n      createdAt: Date;\n      updatedAt: Date;\n      __v: number;\n    }[];\n  }>();\n\n  useEffect(() => {\n    const getConversations = async () => {\n      const res = await axios.get(\n        `http://localhost:5050/api/conversations/${user._id}`\n      );\n      setConversations(res.data);\n    };\n    getConversations();\n  }, []);\n\n  useEffect(() => {\n    const getMessages = async () => {\n      const res = await axios.get(\n        `http://localhost:5050/api/messages/${selectedConversation?._id}`\n      );\n      setMessages(res.data);\n    };\n    getMessages();\n  }, [selectedConversation]);\n\n  const sendMessage = async () => {\n    const res = await axios.post(\n      `http://localhost:5050/api/messages/${selectedConversation?._id}`,\n      {\n        content: \"This is the first message sent from the app!\",\n        userID: user._id,\n        conversationID: selectedConversation?._id,\n      }\n    );\n  };\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <div style={{ marginRight: \"100px\" }}>\n        {conversations.map((conversation) => {\n          return (\n            <div key={conversation._id}>\n              {conversation.membersInfos.map((member) => {\n                if (member._id !== user._id)\n                  return (\n                    <div\n                      onClick={() => setSelectedConversation(conversation)}\n                      key={member._id}\n                    >\n                      {member.username}\n                    </div>\n                  );\n              })}\n            </div>\n          );\n        })}\n      </div>\n      <div>\n        {messages.map((message) => {\n          return <div key={message._id}>{message.content}</div>;\n        })}\n        <input placeholder=\"your message\"></input>\n        <button onClick={sendMessage}>SEND</button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}