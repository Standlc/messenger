{"ast":null,"code":"var _jsxFileName = \"/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/MessagesList.tsx\",\n    _s = $RefreshSig$();\n\nimport moment from \"moment\";\nimport React, { useContext } from \"react\";\nimport { UserContext } from \"../../../contexts/UserProvider\";\nimport { isMessageClose } from \"./isMessageClose\";\nimport \"./messageConversationList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessagesList = _ref => {\n  _s();\n\n  var _messages$;\n\n  let {\n    messages\n  } = _ref;\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  console.log(moment((_messages$ = messages[0]) === null || _messages$ === void 0 ? void 0 : _messages$.createdAt).format());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-message-list-container\",\n    children: messages.map((message, i) => {\n      const isOwnMessage = (user === null || user === void 0 ? void 0 : user._id) === message.userInfos._id;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isOwnMessage ? \"conversation-message-wrapper own\" : \"conversation-message-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: isMessageClose({\n            order: \"prev\",\n            messages,\n            i\n          }) ? {\n            borderTopRightRadius: \"\"\n          } : {},\n          className: isOwnMessage ? \"conversation-message own\" : \"conversation-message\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"conversation-message-date\",\n          children: moment(message.createdAt).format(\"H:mm\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, message._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessagesList, \"74GGDIL3agQW3CqnnuL98bKYYX0=\");\n\n_c = MessagesList;\nexport default MessagesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagesList\");","map":{"version":3,"sources":["/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/MessagesList.tsx"],"names":["moment","React","useContext","UserContext","isMessageClose","MessagesList","messages","user","setUser","console","log","createdAt","format","map","message","i","isOwnMessage","_id","userInfos","order","borderTopRightRadius","content"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,WAAT,QAA4B,gCAA5B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAO,+BAAP;;;AAEA,MAAMC,YAAY,GAAG,QAA2C;AAAA;;AAAA;;AAAA,MAA1C;AAAEC,IAAAA;AAAF,GAA0C;AAC9D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBN,UAAU,CAACC,WAAD,CAApC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,eAACM,QAAQ,CAAC,CAAD,CAAT,+CAAC,WAAaK,SAAd,CAAN,CAA+BC,MAA/B,EAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA,cACGN,QAAQ,CAACO,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,KAAgB;AAC5B,YAAMC,YAAY,GAAG,CAAAT,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEU,GAAN,MAAcH,OAAO,CAACI,SAAR,CAAkBD,GAArD;AACA,0BACE;AAEE,QAAA,SAAS,EACPD,YAAY,GACR,kCADQ,GAER,8BALR;AAAA,gCAQE;AACE,UAAA,KAAK,EACHZ,cAAc,CAAC;AAAEe,YAAAA,KAAK,EAAE,MAAT;AAAiBb,YAAAA,QAAjB;AAA2BS,YAAAA;AAA3B,WAAD,CAAd,GACI;AAAEK,YAAAA,oBAAoB,EAAE;AAAxB,WADJ,GAEI,EAJR;AAME,UAAA,SAAS,EACPJ,YAAY,GACR,0BADQ,GAER,sBATR;AAAA,oBAYGF,OAAO,CAACO;AAZX;AAAA;AAAA;AAAA;AAAA,gBARF,eAsBE;AAAG,UAAA,SAAS,EAAC,2BAAb;AAAA,oBACGrB,MAAM,CAACc,OAAO,CAACH,SAAT,CAAN,CAA0BC,MAA1B,CAAiC,MAAjC;AADH;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA,SACOE,OAAO,CAACG,GADf;AAAA;AAAA;AAAA;AAAA,cADF;AA4BD,KA9BA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CAvCD;;GAAMZ,Y;;KAAAA,Y;AAyCN,eAAeA,YAAf","sourcesContent":["import moment from \"moment\";\nimport React, { useContext } from \"react\";\nimport { Message } from \"../../../ChatApp\";\nimport { UserContext } from \"../../../contexts/UserProvider\";\nimport { isMessageClose } from \"./isMessageClose\";\nimport \"./messageConversationList.css\";\n\nconst MessagesList = ({ messages }: { messages: Message[] }) => {\n  const { user, setUser } = useContext(UserContext);\n  console.log(moment(messages[0]?.createdAt).format());\n\n  return (\n    <div className=\"conversation-message-list-container\">\n      {messages.map((message, i) => {\n        const isOwnMessage = user?._id === message.userInfos._id;\n        return (\n          <div\n            key={message._id}\n            className={\n              isOwnMessage\n                ? \"conversation-message-wrapper own\"\n                : \"conversation-message-wrapper\"\n            }\n          >\n            <p\n              style={\n                isMessageClose({ order: \"prev\", messages, i })\n                  ? { borderTopRightRadius: \"\" }\n                  : {}\n              }\n              className={\n                isOwnMessage\n                  ? \"conversation-message own\"\n                  : \"conversation-message\"\n              }\n            >\n              {message.content}\n            </p>\n            <p className=\"conversation-message-date\">\n              {moment(message.createdAt).format(\"H:mm\")}\n            </p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default MessagesList;\n"]},"metadata":{},"sourceType":"module"}