{"ast":null,"code":"var _jsxFileName = \"/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/MessagesList.tsx\",\n    _s = $RefreshSig$();\n\nimport moment from \"moment\";\nimport React, { useContext } from \"react\";\nimport { UserContext } from \"../../../contexts/UserProvider\";\nimport { isMessageClose } from \"./isMessageClose\";\nimport \"./messageConversationList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessagesList = _ref => {\n  _s();\n\n  let {\n    messages\n  } = _ref;\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-message-list-container\",\n    children: messages.map((message, i) => {\n      const isOwnMessage = (user === null || user === void 0 ? void 0 : user._id) === message.userInfos._id;\n      const isNextMessageClose = isMessageClose({\n        order: \"next\",\n        messages,\n        i\n      });\n      const isPrevMessageClose = isMessageClose({\n        order: \"prev\",\n        messages,\n        i\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isOwnMessage ? \"conversation-message-wrapper own\" : \"conversation-message-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: isOwnMessage ? \"conversation-message own\" : \"conversation-message\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), !isNextMessageClose && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"conversation-message-date\",\n          children: moment(message.createdAt).format(\"H:mm\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, message._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessagesList, \"74GGDIL3agQW3CqnnuL98bKYYX0=\");\n\n_c = MessagesList;\nexport default MessagesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagesList\");","map":{"version":3,"sources":["/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/MessagesList.tsx"],"names":["moment","React","useContext","UserContext","isMessageClose","MessagesList","messages","user","setUser","map","message","i","isOwnMessage","_id","userInfos","isNextMessageClose","order","isPrevMessageClose","content","createdAt","format"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,WAAT,QAA4B,gCAA5B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAO,+BAAP;;;AAEA,MAAMC,YAAY,GAAG,QAA2C;AAAA;;AAAA,MAA1C;AAAEC,IAAAA;AAAF,GAA0C;AAC9D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBN,UAAU,CAACC,WAAD,CAApC;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA,cACGG,QAAQ,CAACG,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,KAAgB;AAC5B,YAAMC,YAAY,GAAG,CAAAL,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEM,GAAN,MAAcH,OAAO,CAACI,SAAR,CAAkBD,GAArD;AACA,YAAME,kBAAkB,GAAGX,cAAc,CAAC;AACxCY,QAAAA,KAAK,EAAE,MADiC;AAExCV,QAAAA,QAFwC;AAGxCK,QAAAA;AAHwC,OAAD,CAAzC;AAKA,YAAMM,kBAAkB,GAAGb,cAAc,CAAC;AACxCY,QAAAA,KAAK,EAAE,MADiC;AAExCV,QAAAA,QAFwC;AAGxCK,QAAAA;AAHwC,OAAD,CAAzC;AAKA,0BACE;AAEE,QAAA,SAAS,EACPC,YAAY,GACR,kCADQ,GAER,8BALR;AAAA,gCAQE;AACE,UAAA,SAAS,EACPA,YAAY,GACR,0BADQ,GAER,sBAJR;AAAA,oBAOGF,OAAO,CAACQ;AAPX;AAAA;AAAA;AAAA;AAAA,gBARF,EAiBG,CAACH,kBAAD,iBACC;AAAG,UAAA,SAAS,EAAC,2BAAb;AAAA,oBACGf,MAAM,CAACU,OAAO,CAACS,SAAT,CAAN,CAA0BC,MAA1B,CAAiC,MAAjC;AADH;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA,SACOV,OAAO,CAACG,GADf;AAAA;AAAA;AAAA;AAAA,cADF;AAyBD,KArCA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CA5CD;;GAAMR,Y;;KAAAA,Y;AA8CN,eAAeA,YAAf","sourcesContent":["import moment from \"moment\";\nimport React, { useContext } from \"react\";\nimport { Message } from \"../../../ChatApp\";\nimport { UserContext } from \"../../../contexts/UserProvider\";\nimport { isMessageClose } from \"./isMessageClose\";\nimport \"./messageConversationList.css\";\n\nconst MessagesList = ({ messages }: { messages: Message[] }) => {\n  const { user, setUser } = useContext(UserContext);\n  return (\n    <div className=\"conversation-message-list-container\">\n      {messages.map((message, i) => {\n        const isOwnMessage = user?._id === message.userInfos._id;\n        const isNextMessageClose = isMessageClose({\n          order: \"next\",\n          messages,\n          i,\n        });\n        const isPrevMessageClose = isMessageClose({\n          order: \"prev\",\n          messages,\n          i,\n        });\n        return (\n          <div\n            key={message._id}\n            className={\n              isOwnMessage\n                ? \"conversation-message-wrapper own\"\n                : \"conversation-message-wrapper\"\n            }\n          >\n            <p\n              className={\n                isOwnMessage\n                  ? \"conversation-message own\"\n                  : \"conversation-message\"\n              }\n            >\n              {message.content}\n            </p>\n            {!isNextMessageClose && (\n              <p className=\"conversation-message-date\">\n                {moment(message.createdAt).format(\"H:mm\")}\n              </p>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default MessagesList;\n"]},"metadata":{},"sourceType":"module"}