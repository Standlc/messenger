{"ast":null,"code":"var _jsxFileName = \"/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/MessagesList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport ChatMessage from \"./chatMessage/ChatMessage\";\nimport \"./messagesList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessagesList = _ref => {\n  _s();\n\n  let {\n    messages\n  } = _ref;\n  const chatMessageContainerRef = useRef(null);\n  const chatMessagesWrapperRef = useRef(null);\n  useEffect(() => {\n    if (!chatMessagesWrapperRef.current || !chatMessageContainerRef.current) return;\n\n    const handleScroll = () => {\n      if (!chatMessagesWrapperRef.current || !chatMessageContainerRef.current) return;\n      console.log(chatMessagesWrapperRef.current.getBoundingClientRect().height - chatMessageContainerRef.current.getBoundingClientRect().height);\n      console.log(chatMessagesWrapperRef.current.scrollTop);\n    };\n\n    chatMessagesWrapperRef.current.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      var _chatMessagesWrapperR;\n\n      return (_chatMessagesWrapperR = chatMessagesWrapperRef.current) === null || _chatMessagesWrapperR === void 0 ? void 0 : _chatMessagesWrapperR.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [chatMessagesWrapperRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: chatMessageContainerRef,\n    className: \"chat-messages-list-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chatMessagesWrapperRef,\n      className: \"chat-messages-list-wrapper\",\n      children: messages.map((message, i) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        messages: messages,\n        i: i\n      }, message._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessagesList, \"aALU7ejW7RyAxM5oXBNSg44oVG4=\");\n\n_c = MessagesList;\nexport default MessagesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagesList\");","map":{"version":3,"sources":["/Users/stan/Desktop/messenger/client/src/components/chat/messagesList/MessagesList.tsx"],"names":["React","useEffect","useRef","ChatMessage","MessagesList","messages","chatMessageContainerRef","chatMessagesWrapperRef","current","handleScroll","console","log","getBoundingClientRect","height","scrollTop","addEventListener","removeEventListener","map","message","i","_id"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,oBAAP;;;AAEA,MAAMC,YAAY,GAAG,QAA2C;AAAA;;AAAA,MAA1C;AAAEC,IAAAA;AAAF,GAA0C;AAC9D,QAAMC,uBAAuB,GAAGJ,MAAM,CAAiB,IAAjB,CAAtC;AACA,QAAMK,sBAAsB,GAAGL,MAAM,CAAiB,IAAjB,CAArC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,sBAAsB,CAACC,OAAxB,IAAmC,CAACF,uBAAuB,CAACE,OAAhE,EACE;;AACF,UAAMC,YAAY,GAAG,MAAM;AACzB,UAAI,CAACF,sBAAsB,CAACC,OAAxB,IAAmC,CAACF,uBAAuB,CAACE,OAAhE,EACE;AACFE,MAAAA,OAAO,CAACC,GAAR,CACEJ,sBAAsB,CAACC,OAAvB,CAA+BI,qBAA/B,GAAuDC,MAAvD,GACEP,uBAAuB,CAACE,OAAxB,CAAgCI,qBAAhC,GAAwDC,MAF5D;AAIAH,MAAAA,OAAO,CAACC,GAAR,CAAYJ,sBAAsB,CAACC,OAAvB,CAA+BM,SAA3C;AACD,KARD;;AAUAP,IAAAA,sBAAsB,CAACC,OAAvB,CAA+BO,gBAA/B,CAAgD,QAAhD,EAA0DN,YAA1D;AACA,WAAO;AAAA;;AAAA,sCACLF,sBAAsB,CAACC,OADlB,0DACL,sBAAgCQ,mBAAhC,CACE,QADF,EAEEP,YAFF,CADK;AAAA,KAAP;AAKD,GAnBQ,EAmBN,CAACF,sBAAD,CAnBM,CAAT;AAqBA,sBACE;AAAK,IAAA,GAAG,EAAED,uBAAV;AAAmC,IAAA,SAAS,EAAC,8BAA7C;AAAA,2BACE;AAAK,MAAA,GAAG,EAAEC,sBAAV;AAAkC,MAAA,SAAS,EAAC,4BAA5C;AAAA,gBACGF,QAAQ,CAACY,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,kBACZ,QAAC,WAAD;AAA+B,QAAA,QAAQ,EAAEd,QAAzC;AAAmD,QAAA,CAAC,EAAEc;AAAtD,SAAkBD,OAAO,CAACE,GAA1B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAjCD;;GAAMhB,Y;;KAAAA,Y;AAmCN,eAAeA,YAAf","sourcesContent":["import { relativeTimeRounding } from \"moment\";\nimport React, { useEffect, useRef } from \"react\";\nimport { Message } from \"../../../types\";\nimport ChatMessage from \"./chatMessage/ChatMessage\";\nimport \"./messagesList.css\";\n\nconst MessagesList = ({ messages }: { messages: Message[] }) => {\n  const chatMessageContainerRef = useRef<HTMLDivElement>(null);\n  const chatMessagesWrapperRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (!chatMessagesWrapperRef.current || !chatMessageContainerRef.current)\n      return;\n    const handleScroll = () => {\n      if (!chatMessagesWrapperRef.current || !chatMessageContainerRef.current)\n        return;\n      console.log(\n        chatMessagesWrapperRef.current.getBoundingClientRect().height -\n          chatMessageContainerRef.current.getBoundingClientRect().height\n      );\n      console.log(chatMessagesWrapperRef.current.scrollTop);\n    };\n\n    chatMessagesWrapperRef.current.addEventListener(\"scroll\", handleScroll);\n    return () =>\n      chatMessagesWrapperRef.current?.removeEventListener(\n        \"scroll\",\n        handleScroll\n      );\n  }, [chatMessagesWrapperRef]);\n\n  return (\n    <div ref={chatMessageContainerRef} className=\"chat-messages-list-container\">\n      <div ref={chatMessagesWrapperRef} className=\"chat-messages-list-wrapper\">\n        {messages.map((message, i) => (\n          <ChatMessage key={message._id} messages={messages} i={i} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MessagesList;\n"]},"metadata":{},"sourceType":"module"}