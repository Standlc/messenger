{"ast":null,"code":"export const sortedChatsByLastMessage = _ref => {\n  let {\n    chats\n  } = _ref;\n  const chatsWithoutLastMessage = chats.filter(chat => !chat.lastMessage && chat);\n  const chatsWithLastMessage = chats.filter(chat => chat.lastMessage && chat);\n  const sortedChatsWithoutLastMessage = chatsWithoutLastMessage.sort((c1, c2) => new Date(c2.createdAt).valueOf() - new Date(c1.createdAt).valueOf());\n  const sortedChatsWithLastMessage = chatsWithLastMessage.sort((c1, c2) => {\n    if (c2.lastMessage && c1.lastMessage) return new Date(c2.lastMessage.createdAt).valueOf() - new Date(c1.lastMessage.createdAt).valueOf();else return 0;\n  });\n  const sortedChats = [...sortedChatsWithLastMessage, ...sortedChatsWithoutLastMessage];\n  return sortedChats;\n};","map":{"version":3,"sources":["/Users/stan/Desktop/messenger/client/src/sortChats.tsx"],"names":["sortedChatsByLastMessage","chats","chatsWithoutLastMessage","filter","chat","lastMessage","chatsWithLastMessage","sortedChatsWithoutLastMessage","sort","c1","c2","Date","createdAt","valueOf","sortedChatsWithLastMessage","sortedChats"],"mappings":"AAEA,OAAO,MAAMA,wBAAwB,GAAG,QAAkC;AAAA,MAAjC;AAAEC,IAAAA;AAAF,GAAiC;AACxE,QAAMC,uBAAuB,GAAGD,KAAK,CAACE,MAAN,CAC7BC,IAAD,IAAU,CAACA,IAAI,CAACC,WAAN,IAAqBD,IADD,CAAhC;AAGA,QAAME,oBAAoB,GAAGL,KAAK,CAACE,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,WAAL,IAAoBD,IAA3C,CAA7B;AACA,QAAMG,6BAA6B,GAAGL,uBAAuB,CAACM,IAAxB,CACpC,CAACC,EAAD,EAAWC,EAAX,KACE,IAAIC,IAAJ,CAASD,EAAE,CAACE,SAAZ,EAAuBC,OAAvB,KAAmC,IAAIF,IAAJ,CAASF,EAAE,CAACG,SAAZ,EAAuBC,OAAvB,EAFD,CAAtC;AAIA,QAAMC,0BAA0B,GAAGR,oBAAoB,CAACE,IAArB,CACjC,CAACC,EAAD,EAAWC,EAAX,KAAwB;AACtB,QAAIA,EAAE,CAACL,WAAH,IAAkBI,EAAE,CAACJ,WAAzB,EACE,OACE,IAAIM,IAAJ,CAASD,EAAE,CAACL,WAAH,CAAeO,SAAxB,EAAmCC,OAAnC,KACA,IAAIF,IAAJ,CAASF,EAAE,CAACJ,WAAH,CAAeO,SAAxB,EAAmCC,OAAnC,EAFF,CADF,KAKK,OAAO,CAAP;AACN,GARgC,CAAnC;AAUA,QAAME,WAAW,GAAG,CAClB,GAAGD,0BADe,EAElB,GAAGP,6BAFe,CAApB;AAIA,SAAOQ,WAAP;AACD,CAxBM","sourcesContent":["import { Chat } from \"./types\";\n\nexport const sortedChatsByLastMessage = ({ chats }: { chats: Chat[] }) => {\n  const chatsWithoutLastMessage = chats.filter(\n    (chat) => !chat.lastMessage && chat\n  );\n  const chatsWithLastMessage = chats.filter((chat) => chat.lastMessage && chat);\n  const sortedChatsWithoutLastMessage = chatsWithoutLastMessage.sort(\n    (c1: Chat, c2: Chat) =>\n      new Date(c2.createdAt).valueOf() - new Date(c1.createdAt).valueOf()\n  );\n  const sortedChatsWithLastMessage = chatsWithLastMessage.sort(\n    (c1: Chat, c2: Chat) => {\n      if (c2.lastMessage && c1.lastMessage)\n        return (\n          new Date(c2.lastMessage.createdAt).valueOf() -\n          new Date(c1.lastMessage.createdAt).valueOf()\n        );\n      else return 0;\n    }\n  );\n  const sortedChats = [\n    ...sortedChatsWithLastMessage,\n    ...sortedChatsWithoutLastMessage,\n  ];\n  return sortedChats;\n};\n"]},"metadata":{},"sourceType":"module"}